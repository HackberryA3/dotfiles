set -sg escape-time 0 # ESCの入力にラグが発生するので、0に設定
setw -g xterm-keys on # tmuxでのキーバインドを有効にする
set -g default-terminal "xterm-256color" # tmuxの256色対応
set -ag terminal-overrides ",$TERM:RGB" # tmuxの256色対応
set-option -g focus-events on # focus情報をアプリに伝える
set -g set-titles on # ウィンドウのタイトルを設定
set -g set-titles-string "[tmux] #T @ #H" # ウィンドウのタイトルのフォーマット

set -g status-interval 1 # ステータスバーの更新間隔

set -g base-index 1 # ウィンドウのインデックスを1から始める
setw -g pane-base-index 1 # ペインのインデックスを1から始める

# マウス操作を有効にする
set-option -g mouse on
# Vimキーバインドを有効にする
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi Escape send-keys -X clear-selection
# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M
# クリップボードを有効にする
if "which xclip" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -selection clipboard'"
if "which xclip" "bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -i -selection clipboard'"
if "which xclip" "bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -i -selection clipboard'"
if "which xclip" "bind-key ] run 'tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer'"

if "which xsel" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel --clipboard --input'"
if "which xsel" "bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel --clipboard --input'"
if "which xsel" "bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xsel --clipboard --input'"
if "which xsel" "bind-key ] run 'tmux set-buffer -- \"$(xsel --clipboard --output)\"; tmux paste-buffer'"

if "which pbcopy" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pbcopy" "bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pbcopy" "bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'"
if "which pbcopy" "bind-key ] run 'tmux set-buffer -- \"$(pbpaste)\"; tmux paste-buffer'"

# プレフィックスキーをC-fに変更
set-option -g prefix C-f 
unbind-key C-b
bind-key C-f send-prefix

# キーバインド
# 分割
bind-key v split-window -h
bind-key w split-window -v
# ウィンドウ切り替え
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
# ペイン切り替え
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# ペインのリサイズ
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2



# プラグインの設定
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux' # テーマ
set -g @plugin 'tmux-plugins/tmux-resurrect' # セッションの保存
set -g @plugin 'tmux-plugins/tmux-continuum' # セッションの自動復元

# テーマの設定 ----------------------------------------------------------------------------------------------
set -g @catppuccin_flavour 'macchiato' # テーマの配色（catppuccinは、latte, frappe, macchiato, mochaが選べる）
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules_right "directory user host session date_time"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{pane_current_path}"
set -g @catppuccin_date_time_text "%m/%d %H:%M:%S"
# ------------------------------------------------------------------------------------------------------------

# セッションの設定 -------------------------------------------------------------------------------------------
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
# ------------------------------------------------------------------------------------------------------------

if "test ! -d ~/.tmux/plugins/tpm" \
	   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'
